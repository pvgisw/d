import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
-df = pd.read_csv("cancer.csv") df
-df.isnull().sum()
-df = df.drop(["id"],axis=1) df
-from sklearn.preprocessing import LabelEncoder
l_e = LabelEncoder()
df['diagnosis'] = l_e.fit_transform(df['diagnosis'])
-df.head() df
-df.describe()
-df.mean()
-X = df.iloc[:,1:]
X
-Y = df.iloc[:,0]
Y
-Y.shape
-df.corr()
-from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
df['diagnosis'] = le.fit_transform(df['diagnosis'])
df.head()
-from sklearn.model_selection import train_test_split
X_train,X_test,y_train,y_test = train_test_split(X,Y,test_size=0.25)
-X_train
-y_train
-X_test
-y_test
-from sklearn.linear_model import LogisticRegression
-model = LogisticRegression()
-model.fit(X_train,y_train)
-from sklearn.metrics import accuracy_score
-Y_train_predict = model.predict(X_train)
training_data_accuracy = accuracy_score(y_train,Y_train_predict)
training_data_accuracy
-Y_test_predict = model.predict(X_test)
testing_data_accuracy = accuracy_score(y_test,Y_test_predict)
testing_data_accuracy
-from sklearn.metrics import confusion_matrix
-conf_matrix = confusion_matrix(y_test, Y_test_predict)
conf_matrix
-from sklearn.metrics import ConfusionMatrixDisplay
-confMat = ConfusionMatrixDisplay(confusion_matrix = conf_matrix, display_labels = ['malignant','benign'])
-confMat.plot()
-from sklearn.metrics import mean_squared_error
print("Mean squared error is ", mean_squared_error(y_test,Y_test_predict))
-from sklearn.metrics import mean_absolute_error
mse = mean_absolute_error(y_test,Y_test_predict)
print("Mean absolute error is ", mse)
-from sklearn import tree
-from sklearn.tree import DecisionTreeClassifier
Classifier2 = tree.DecisionTreeClassifier(criterion='gini')
Classifier2.fit(X_train,y_train)
-y_train_predict = Classifier2.predict(X_train)
y_train_predict
-y_test_predict = Classifier2.predict(X_test)
y_test_predict
-accuracy_score(y_train,y_train_predict)
-accuracy_score(y_test,y_test_predict)
-Classifier2_confMat = confusion_matrix(y_test,y_test_predict)
Classifier2_confMat 
-confMat2 = ConfusionMatrixDisplay(confusion_matrix = Classifier2_confMat, display_labels = ['malignant','benign'])
confMat2.plot()
-plt.subplots(figsize=(25,20))
graphviz = tree.plot_tree(Classifier2,feature_names=X.columns,filled = True,fontsize=16)
plt.show()
-print("Mean squared error is ", mean_squared_error(y_test,y_test_predict))
-mse = mean_absolute_error(y_test,y_test_predict)
print("Mean absolute error is ", mse)
