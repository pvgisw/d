import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
-df = pd.read_csv("heart (2).csv")
-df.isna().sum()
-df.info()
-df.describe()
-df['target'].value_counts()
-c = df.corr() c
-sns.heatmap(c,annot=True)
-df1=df.iloc[0:10,] df1
-df2=df.iloc[10:,:] df2
-df3=pd.concat([df1,df2]) df3
-df12=df.iloc[:,1:7] df12
df13=df.iloc[:,6:] df13
-df12.merge(df13,how='left', on='restecg')
-x1=df[['cp','restecg','thalach']] x1
-y1=df['target'] y1
-x_train1, x_test1, y_train1, y_test1 = train_test_split(x1, y1, test_size=0.25, random_state=0)
-x_train1
-y_train1
-x_test1
-y_test1
-from sklearn.metrics import mean_squared_error,r2_score
from sklearn.model_selection import train_test_split
x= df.iloc[:,0:13]
y= df['target']
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.25, random_state=0)
-error = []
from sklearn.neighbors import KNeighborsClassifier
for i in range(1, 30):
    knn = KNeighborsClassifier(n_neighbors=i)
    knn.fit(x_train, y_train)
    pred_i = knn.predict(x_test)
    error.append(np.mean(pred_i != y_test))
plt.figure(figsize=(12, 6))
plt.plot(range(1, 30), error, color='red', linestyle='dashed', marker='o',
         markerfacecolor='blue', markersize=10)
-model = KNeighborsClassifier(n_neighbors=3)
model.fit(x_train,y_train)
y_pred = model.predict(x_test)
from sklearn.metrics import accuracy_score,confusion_matrix
print("Accuracy Score:",accuracy_score(y_test,y_pred))
confusion_matrix=confusion_matrix(y_test,y_pred)
confusion_matrix
-r2_score(y_test,y_pred) r2_score(y_test,y_pred)
-mean_squared_error(y_test,y_pred)
-rmse=mean_squared_error(y_test,y_pred,squared=False) rmse
-from sklearn.tree import DecisionTreeClassifier
model = DecisionTreeClassifier(criterion='entropy',random_state=7)
clf=model.fit(x_train,y_train)
y_pred2 = model.predict(x_test)
from sklearn.metrics import accuracy_score
print("Accuracy Score:",accuracy_score(y_test,y_pred2))
-r2_score(y_test,y_pred2)
-mean_squared_error(y_test,y_pred2)
-rmse=mean_squared_error(y_test,y_pred2,squared=False)
rmse
